TAP version 13
# Subtest: test/case-insensitive.test.js
    # Subtest: case insensitive static routes of level 1
        1..1
        ok 1 - we should be here
    ok 1 - case insensitive static routes of level 1 # time=10.983ms
    
    # Subtest: case insensitive static routes of level 2
        1..1
        ok 1 - we should be here
    ok 2 - case insensitive static routes of level 2 # time=1.596ms
    
    # Subtest: case insensitive static routes of level 3
        1..1
        ok 1 - we should be here
    ok 3 - case insensitive static routes of level 3 # time=0.993ms
    
    # Subtest: parametric case insensitive
        1..1
        ok 1 - should be equal
    ok 4 - parametric case insensitive # time=1.274ms
    
    # Subtest: parametric case insensitive with a static part
        1..1
        ok 1 - should be equal
    ok 5 - parametric case insensitive with a static part # time=0.85ms
    
    # Subtest: parametric case insensitive with capital letter
        1..1
        ok 1 - should be equal
    ok 6 - parametric case insensitive with capital letter # time=7.856ms
    
    # Subtest: case insensitive with capital letter in static path with param
        1..1
        ok 1 - should be equal
    ok 7 - case insensitive with capital letter in static path with param # time=0.845ms
    
    # Subtest: case insensitive with multiple paths containing capital letter in static path with param
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 8 - case insensitive with multiple paths containing capital letter in static path with param # time=1.59ms
    
    # Subtest: case insensitive with multiple mixed-case params within same slash couple
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - case insensitive with multiple mixed-case params within same slash couple # time=1.173ms
    
    # Subtest: case insensitive with multiple mixed-case params
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - case insensitive with multiple mixed-case params # time=0.871ms
    
    # Subtest: case insensitive with wildcard
        1..1
        ok 1 - should be equal
    ok 11 - case insensitive with wildcard # time=0.691ms
    
    # Subtest: parametric case insensitive with multiple routes
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - parametric case insensitive with multiple routes # time=5.052ms
    
    1..12
    # time=65.48ms
ok 1 - test/case-insensitive.test.js # time=65.48ms

# Subtest: test/constraint.custom-versioning.test.js
    # Subtest: A route could support multiple versions (find) / 1
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
    ok 1 - A route could support multiple versions (find) / 1 # time=17.654ms
    
    # Subtest: A route could support multiple versions (find) / 1 (add strategy outside constructor)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
    ok 2 - A route could support multiple versions (find) / 1 (add strategy outside constructor) # time=2.165ms
    
    # Subtest: Overriding default strategies uses the custom deriveConstraint function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - Overriding default strategies uses the custom deriveConstraint function # time=1.293ms
    
    # Subtest: Overriding default strategies uses the custom deriveConstraint function (add strategy outside constructor)
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - Overriding default strategies uses the custom deriveConstraint function (add strategy outside constructor) # time=0.916ms
    
    # Subtest: Overriding custom strategies throws as error (add strategy outside constructor)
        1..1
        ok 1 - There already exists a custom constraint with the name version.
    ok 5 - Overriding custom strategies throws as error (add strategy outside constructor) # time=0.761ms
    
    # Subtest: Overriding default strategies after defining a route with constraint
        1..1
        ok 1 - There already exists a route with version constraint.
    ok 6 - Overriding default strategies after defining a route with constraint # time=1.304ms
    
    1..6
    # time=39.732ms
ok 2 - test/constraint.custom-versioning.test.js # time=39.732ms

# Subtest: test/constraint.custom.async.test.js
    # Subtest: should derive async constraint
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should derive async constraint # time=9.958ms
    
    # Subtest: lookup should return an error from deriveConstraint
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equal
    ok 2 - lookup should return an error from deriveConstraint # time=6.012ms
    
    # Subtest: should derive sync and async constraints
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - should derive sync and async constraints # time=12.951ms
    
    1..3
    # time=42.979ms
ok 3 - test/constraint.custom.async.test.js # time=42.979ms

# Subtest: test/constraint.custom.test.js
    # Subtest: A route could support a custom constraint strategy
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - expect falsey value
    ok 1 - A route could support a custom constraint strategy # time=22.684ms
    
    # Subtest: A route could support a custom constraint strategy (add strategy outside constructor)
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - expect falsey value
    ok 2 - A route could support a custom constraint strategy (add strategy outside constructor) # time=1.847ms
    
    # Subtest: A route could support a custom constraint strategy while versioned
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        ok 8 - expect falsey value
    ok 3 - A route could support a custom constraint strategy while versioned # time=3.471ms
    
    # Subtest: A route could support a custom constraint strategy while versioned (add strategy outside constructor)
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        ok 8 - expect falsey value
    ok 4 - A route could support a custom constraint strategy while versioned (add strategy outside constructor) # time=2.073ms
    
    # Subtest: A route could support a custom constraint strategy while versioned and host constrained
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        ok 8 - expect falsey value
        ok 9 - expect falsey value
    ok 5 - A route could support a custom constraint strategy while versioned and host constrained # time=2.299ms
    
    # Subtest: A route could support a custom constraint strategy while versioned and host constrained (add strategy outside constructor)
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        ok 8 - expect falsey value
        ok 9 - expect falsey value
    ok 6 - A route could support a custom constraint strategy while versioned and host constrained (add strategy outside constructor) # time=1.915ms
    
    # Subtest: Custom constraint strategies can set mustMatchWhenDerived flag to true which prevents matches to unconstrained routes when a constraint is derived and there are no other routes
        1..1
        ok 1 - (unnamed test)
    ok 7 - Custom constraint strategies can set mustMatchWhenDerived flag to true which prevents matches to unconstrained routes when a constraint is derived and there are no other routes # time=0.914ms
    
    # Subtest: Custom constraint strategies can set mustMatchWhenDerived flag to true which prevents matches to unconstrained routes when a constraint is derived and there are no other routes (add strategy outside constructor)
        1..1
        ok 1 - (unnamed test)
    ok 8 - Custom constraint strategies can set mustMatchWhenDerived flag to true which prevents matches to unconstrained routes when a constraint is derived and there are no other routes (add strategy outside constructor) # time=0.687ms
    
    # Subtest: Custom constraint strategies can set mustMatchWhenDerived flag to true which prevents matches to unconstrained routes when a constraint is derived when there are constrained routes
        1..1
        ok 1 - (unnamed test)
    ok 9 - Custom constraint strategies can set mustMatchWhenDerived flag to true which prevents matches to unconstrained routes when a constraint is derived when there are constrained routes # time=2.374ms
    
    # Subtest: Custom constraint strategies can set mustMatchWhenDerived flag to true which prevents matches to unconstrained routes when a constraint is derived when there are constrained routes (add strategy outside constructor)
        1..1
        ok 1 - (unnamed test)
    ok 10 - Custom constraint strategies can set mustMatchWhenDerived flag to true which prevents matches to unconstrained routes when a constraint is derived when there are constrained routes (add strategy outside constructor) # time=0.958ms
    
    # Subtest: Custom constraint strategies can set mustMatchWhenDerived flag to false which allows matches to unconstrained routes when a constraint is derived
        1..1
        ok 1 - (unnamed test)
    ok 11 - Custom constraint strategies can set mustMatchWhenDerived flag to false which allows matches to unconstrained routes when a constraint is derived # time=0.57ms
    
    # Subtest: Custom constraint strategies can set mustMatchWhenDerived flag to false which allows matches to unconstrained routes when a constraint is derived (add strategy outside constructor)
        1..1
        ok 1 - (unnamed test)
    ok 12 - Custom constraint strategies can set mustMatchWhenDerived flag to false which allows matches to unconstrained routes when a constraint is derived (add strategy outside constructor) # time=0.962ms
    
    # Subtest: Has constraint strategy method test
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 13 - Has constraint strategy method test # time=6.285ms
    
    1..13
    # time=88.647ms
ok 4 - test/constraint.custom.test.js # time=88.647ms

# Subtest: test/constraint.default-versioning.test.js
    # Subtest: A route could support multiple versions (find) / 1
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 1 - A route could support multiple versions (find) / 1 # time=13.175ms
    
    # Subtest: A route could support multiple versions (find) / 2
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
    ok 2 - A route could support multiple versions (find) / 2 # time=2.726ms
    
    # Subtest: A route could support multiple versions (find) / 3
        1..10
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect falsey value
        ok 8 - expect falsey value
        ok 9 - expect falsey value
        ok 10 - expect falsey value
    ok 3 - A route could support multiple versions (find) / 3 # time=3.167ms
    
    # Subtest: A route could support multiple versions (find) / 4
        1..8
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect falsey value
        ok 7 - expect falsey value
        ok 8 - expect falsey value
    ok 4 - A route could support multiple versions (find) / 4 # time=1.969ms
    
    # Subtest: A route could support multiple versions (find) / 5
        1..1
        ok 1 - expect truthy value
    ok 5 - A route could support multiple versions (find) / 5 # time=0.756ms
    
    # Subtest: Find with a version but without versioned routes
        1..1
        ok 1 - expect falsey value
    ok 6 - Find with a version but without versioned routes # time=1.48ms
    
    # Subtest: A route could support multiple versions (lookup)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
    ok 7 - A route could support multiple versions (lookup) # time=4.052ms
    
    # Subtest: It should always choose the highest version of a route
        1..3
        ok 1 - Yeah!
        ok 2 - Yeah!
        ok 3 - Yeah!
    ok 8 - It should always choose the highest version of a route # time=2.164ms
    
    # Subtest: Declare the same route with and without version
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 9 - Declare the same route with and without version # time=0.814ms
    
    # Subtest: It should throw if you declare multiple times the same route
        1..1
        ok 1 - should be equal
    ok 10 - It should throw if you declare multiple times the same route # time=0.684ms
    
    # Subtest: Versioning won't work if there are no versioned routes
        1..2
        ok 1 - Yeah!
        ok 2 - Yeah!
    ok 11 - Versioning won't work if there are no versioned routes # time=0.658ms
    
    # Subtest: Unversioned routes aren't triggered when unknown versions are requested
        1..1
        ok 1 - expect truthy value
    ok 12 - Unversioned routes aren't triggered when unknown versions are requested # time=0.659ms
    
    1..12
    # time=67.344ms
ok 5 - test/constraint.default-versioning.test.js # time=67.344ms

# Subtest: test/constraint.host.test.js
    # Subtest: A route supports multiple host constraints
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 1 - A route supports multiple host constraints # time=9.219ms
    
    # Subtest: A route supports wildcard host constraints
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect falsey value
    ok 2 - A route supports wildcard host constraints # time=2.14ms
    
    # Subtest: A route supports multiple host constraints (lookup)
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - expect truthy value
    ok 3 - A route supports multiple host constraints (lookup) # time=1.961ms
    
    1..3
    # time=26.541ms
ok 6 - test/constraint.host.test.js # time=26.541ms

# Subtest: test/constraints.test.js
    # Subtest: A route could support multiple host constraints while versioned
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 1 - A route could support multiple host constraints while versioned # time=10.523ms
    
    # Subtest: Constrained routes are matched before unconstrainted routes when the constrained route is added last
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 2 - Constrained routes are matched before unconstrainted routes when the constrained route is added last # time=1.594ms
    
    # Subtest: Constrained routes are matched before unconstrainted routes when the constrained route is added first
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - Constrained routes are matched before unconstrainted routes when the constrained route is added first # time=1.136ms
    
    # Subtest: Routes with multiple constraints are matched before routes with one constraint when the doubly-constrained route is added last
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 4 - Routes with multiple constraints are matched before routes with one constraint when the doubly-constrained route is added last # time=1.201ms
    
    # Subtest: Routes with multiple constraints are matched before routes with one constraint when the doubly-constrained route is added first
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 5 - Routes with multiple constraints are matched before routes with one constraint when the doubly-constrained route is added first # time=1.067ms
    
    # Subtest: Routes with multiple constraints are matched before routes with one constraint before unconstrained routes
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 6 - Routes with multiple constraints are matched before routes with one constraint before unconstrained routes # time=1.096ms
    
    # Subtest: Has constraint strategy method test
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 7 - Has constraint strategy method test # time=4.214ms
    
    1..7
    # time=45.118ms
ok 7 - test/constraints.test.js # time=45.118ms

# Subtest: test/custom-querystring-parser.test.js
    # Subtest: Custom querystring parser
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 1 - Custom querystring parser # time=19.955ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=2.909ms
    
    # Subtest: Querystring without value
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 3 - Querystring without value # time=1.357ms
    
    1..3
    # time=38.009ms
ok 8 - test/custom-querystring-parser.test.js # time=38.009ms

# Subtest: test/errors.test.js
    # Subtest: Method should be a string
        1..1
        ok 1 - should be equal
    ok 1 - Method should be a string # time=6.35ms
    
    # Subtest: Method should be a string [ignoreTrailingSlash=true]
        1..1
        ok 1 - should be equal
    ok 2 - Method should be a string [ignoreTrailingSlash=true] # time=1.079ms
    
    # Subtest: Method should be a string [ignoreDuplicateSlashes=true]
        1..1
        ok 1 - should be equal
    ok 3 - Method should be a string [ignoreDuplicateSlashes=true] # time=0.693ms
    
    # Subtest: Method should be a string (array)
        1..1
        ok 1 - should be equal
    ok 4 - Method should be a string (array) # time=1.837ms
    
    # Subtest: Method should be a string (array) [ignoreTrailingSlash=true]
        1..1
        ok 1 - should be equal
    ok 5 - Method should be a string (array) [ignoreTrailingSlash=true] # time=1.121ms
    
    # Subtest: Method should be a string (array) [ignoreDuplicateSlashes=true]
        1..1
        ok 1 - should be equal
    ok 6 - Method should be a string (array) [ignoreDuplicateSlashes=true] # time=0.753ms
    
    # Subtest: Path should be a string
        1..1
        ok 1 - should be equal
    ok 7 - Path should be a string # time=2.217ms
    
    # Subtest: Path should be a string [ignoreTrailingSlash=true]
        1..1
        ok 1 - should be equal
    ok 8 - Path should be a string [ignoreTrailingSlash=true] # time=0.491ms
    
    # Subtest: Path should be a string [ignoreDuplicateSlashes=true]
        1..1
        ok 1 - should be equal
    ok 9 - Path should be a string [ignoreDuplicateSlashes=true] # time=3.142ms
    
    # Subtest: The path could not be empty
        1..1
        ok 1 - should be equal
    ok 10 - The path could not be empty # time=0.462ms
    
    # Subtest: The path could not be empty [ignoreTrailingSlash=true]
        1..1
        ok 1 - should be equal
    ok 11 - The path could not be empty [ignoreTrailingSlash=true] # time=0.434ms
    
    # Subtest: The path could not be empty [ignoreDuplicateSlashes=true]
        1..1
        ok 1 - should be equal
    ok 12 - The path could not be empty [ignoreDuplicateSlashes=true] # time=0.372ms
    
    # Subtest: The first character of a path should be `/` or `*`
        1..1
        ok 1 - should be equal
    ok 13 - The first character of a path should be `/` or `*` # time=0.363ms
    
    # Subtest: The first character of a path should be `/` or `*` [ignoreTrailingSlash=true]
        1..1
        ok 1 - should be equal
    ok 14 - The first character of a path should be `/` or `*` [ignoreTrailingSlash=true] # time=0.547ms
    
    # Subtest: The first character of a path should be `/` or `*` [ignoreDuplicateSlashes=true]
        1..1
        ok 1 - should be equal
    ok 15 - The first character of a path should be `/` or `*` [ignoreDuplicateSlashes=true] # time=0.641ms
    
    # Subtest: Handler should be a function
        1..1
        ok 1 - should be equal
    ok 16 - Handler should be a function # time=0.506ms
    
    # Subtest: Method is not an http method.
        1..1
        ok 1 - should be equal
    ok 17 - Method is not an http method. # time=0.968ms
    
    # Subtest: Method is not an http method. (array)
        1..1
        ok 1 - should be equal
    ok 18 - Method is not an http method. (array) # time=0.996ms
    
    # Subtest: The default route must be a function
        1..1
        ok 1 - should be equal
    ok 19 - The default route must be a function # time=0.442ms
    
    # Subtest: Method already declared
        1..1
        ok 1 - should be equal
    ok 20 - Method already declared # time=0.853ms
    
    # Subtest: Method already declared if * is used
        1..1
        ok 1 - should be equal
    ok 21 - Method already declared if * is used # time=1.404ms
    
    # Subtest: Method already declared if /* is used
        1..1
        ok 1 - should be equal
    ok 22 - Method already declared if /* is used # time=0.745ms
    
    # Subtest: Method already declared [ignoreTrailingSlash=true]
        1..2
        # Subtest: without trailing slash
            1..2
            ok 1 - should be equal
            ok 2 - should be equal
        ok 1 - without trailing slash # time=5.187ms
        
        # Subtest: with trailing slash
            1..2
            ok 1 - should be equal
            ok 2 - should be equal
        ok 2 - with trailing slash # time=1.275ms
        
    ok 23 - Method already declared [ignoreTrailingSlash=true] # time=15.408ms
    
    # Subtest: Method already declared [ignoreDuplicateSlashes=true]
        1..2
        # Subtest: without duplicate slashes
            1..2
            ok 1 - should be equal
            ok 2 - should be equal
        ok 1 - without duplicate slashes # time=1.495ms
        
        # Subtest: with duplicate slashes
            1..2
            ok 1 - should be equal
            ok 2 - should be equal
        ok 2 - with duplicate slashes # time=1.599ms
        
    ok 24 - Method already declared [ignoreDuplicateSlashes=true] # time=13.161ms
    
    # Subtest: Method already declared nested route
        1..1
        ok 1 - should be equal
    ok 25 - Method already declared nested route # time=2.112ms
    
    # Subtest: Method already declared nested route [ignoreTrailingSlash=true]
        1..2
        # Subtest: without trailing slash
            1..2
            ok 1 - should be equal
            ok 2 - should be equal
        ok 1 - without trailing slash # time=2.084ms
        
        # Subtest: with trailing slash
            1..2
            ok 1 - should be equal
            ok 2 - should be equal
        ok 2 - with trailing slash # time=1.562ms
        
    ok 26 - Method already declared nested route [ignoreTrailingSlash=true] # time=13.167ms
    
    # Subtest: Method already declared with constraints
        1..1
        ok 1 - should be equal
    ok 27 - Method already declared with constraints # time=1.683ms
    
    # Subtest: Method already declared nested route [ignoreDuplicateSlashes=true]
        1..2
        # Subtest: without duplicate slashes
            1..2
            ok 1 - should be equal
            ok 2 - should be equal
        ok 1 - without duplicate slashes # time=1.358ms
        
        # Subtest: with duplicate slashes
            1..2
            ok 1 - should be equal
            ok 2 - should be equal
        ok 2 - with duplicate slashes # time=1.466ms
        
    ok 28 - Method already declared nested route [ignoreDuplicateSlashes=true] # time=15.604ms
    
    1..28
    # time=161.022ms
ok 9 - test/errors.test.js # time=161.022ms

# Subtest: test/fastify-issue-3129.test.js
    # Subtest: contain param and wildcard together
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 1 - contain param and wildcard together # time=19.09ms
    
    1..1
    # time=35.255ms
ok 10 - test/fastify-issue-3129.test.js # time=35.255ms

# Subtest: test/fastify-issue-3957.test.js
    # Subtest: wildcard should not limit by maxParamLength
        1..1
        ok 1 - should be equivalent
    ok 1 - wildcard should not limit by maxParamLength # time=15.701ms
    
    1..1
    # time=37.199ms
ok 11 - test/fastify-issue-3957.test.js # time=37.199ms

# Subtest: test/find.test.js
    # Subtest: find calls can pass no constraints
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect falsey value
    ok 1 - find calls can pass no constraints # time=10.941ms
    
    1..1
    # time=29.597ms
ok 12 - test/find.test.js # time=29.597ms

# Subtest: test/for-in-loop.test.js
    ok 1 - expected to not throw
    1..1
    # time=13.356ms
ok 13 - test/for-in-loop.test.js # time=13.356ms

# Subtest: test/full-url.test.js
    ok 1 - should be equivalent
    ok 2 - should be equivalent
    ok 3 - should be equivalent
    ok 4 - should be equivalent
    ok 5 - should be equivalent
    ok 6 - should be equivalent
    ok 7 - should be equivalent
    ok 8 - should be equivalent
    1..8
    # time=33.807ms
ok 14 - test/full-url.test.js # time=33.807ms

# Subtest: test/host-storage.test.js
    # Subtest: can get hosts by exact matches
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 1 - can get hosts by exact matches # time=9.412ms
    
    # Subtest: can get hosts by regexp matches
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 2 - can get hosts by regexp matches # time=5.251ms
    
    # Subtest: exact host matches take precendence over regexp matches
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        1..3
    ok 3 - exact host matches take precendence over regexp matches # time=0.86ms
    
    1..3
    # time=22.656ms
ok 15 - test/host-storage.test.js # time=22.656ms

# Subtest: test/issue-101.test.js
    # Subtest: Falling back for node's parametric brother
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 1 - Falling back for node's parametric brother # time=29.621ms
    
    1..1
    # time=48.744ms
ok 16 - test/issue-101.test.js # time=48.744ms

# Subtest: test/issue-104.test.js
    # Subtest: Nested static parametric route, url with parameter common prefix > 1
        1..1
        ok 1 - should be equivalent
    ok 1 - Nested static parametric route, url with parameter common prefix > 1 # time=12.058ms
    
    # Subtest: Parametric route, url with parameter common prefix > 1
        1..1
        ok 1 - should be equivalent
    ok 2 - Parametric route, url with parameter common prefix > 1 # time=3.695ms
    
    # Subtest: Parametric route, url with multi parameter common prefix > 1
        1..1
        ok 1 - should be equivalent
    ok 3 - Parametric route, url with multi parameter common prefix > 1 # time=2.82ms
    
    # Subtest: Mixed routes, url with parameter common prefix > 1
        1..11
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
    ok 4 - Mixed routes, url with parameter common prefix > 1 # time=11.426ms
    
    # Subtest: Parent parametric brother should not rewrite child node parametric brother
        1..1
        ok 1 - should be equivalent
    ok 5 - Parent parametric brother should not rewrite child node parametric brother # time=1.318ms
    
    # Subtest: Mixed parametric routes, with last defined route being static
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 6 - Mixed parametric routes, with last defined route being static # time=2.626ms
    
    1..6
    # time=72.682ms
ok 17 - test/issue-104.test.js # time=72.682ms

# Subtest: test/issue-110.test.js
    # Subtest: Nested static parametric route, url with parameter common prefix > 1
        1..1
        ok 1 - should be equivalent
    ok 1 - Nested static parametric route, url with parameter common prefix > 1 # time=17.969ms
    
    1..1
    # time=42.468ms
ok 18 - test/issue-110.test.js # time=42.468ms

# Subtest: test/issue-132.test.js
    # Subtest: Wildcard mixed with dynamic and common prefix / 1
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - Wildcard mixed with dynamic and common prefix / 1 # time=12.397ms
    
    # Subtest: Wildcard mixed with dynamic and common prefix / 2
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 2 - Wildcard mixed with dynamic and common prefix / 2 # time=4.034ms
    
    1..2
    # time=34.475ms
ok 19 - test/issue-132.test.js # time=34.475ms

# Subtest: test/issue-145.test.js
    # Subtest: issue-145
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - expect falsey value
        ok 8 - expect falsey value
    ok 1 - issue-145 # time=19.7ms
    
    1..1
    # time=35.094ms
ok 20 - test/issue-145.test.js # time=35.094ms

# Subtest: test/issue-149.test.js
    # Subtest: Falling back for node's parametric brother
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 1 - Falling back for node's parametric brother # time=28.838ms
    
    1..1
    # time=48.535ms
ok 21 - test/issue-149.test.js # time=48.535ms

# Subtest: test/issue-151.test.js
    # Subtest: Wildcard route should not be blocked by Parametric with different method / 1
        1..1
        ok 1 - should be equal
    ok 1 - Wildcard route should not be blocked by Parametric with different method / 1 # time=9.059ms
    
    # Subtest: Wildcard route should not be blocked by Parametric with different method / 2
        1..1
        ok 1 - should be equal
    ok 2 - Wildcard route should not be blocked by Parametric with different method / 2 # time=2.101ms
    
    1..2
    # time=31.328ms
ok 22 - test/issue-151.test.js # time=31.328ms

# Subtest: test/issue-154.test.js
    # Subtest: Should throw when not sending a string
        1..3
        ok 1 - expected to throw
        ok 2 - expected to throw
        ok 3 - expected to throw
    ok 1 - Should throw when not sending a string # time=9.092ms
    
    1..1
    # time=33.611ms
ok 23 - test/issue-154.test.js # time=33.611ms

# Subtest: test/issue-161.test.js
    # Subtest: Falling back for node's parametric brother without ignoreTrailingSlash
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 1 - Falling back for node's parametric brother without ignoreTrailingSlash # time=30.933ms
    
    # Subtest: Falling back for node's parametric brother with ignoreTrailingSlash
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 2 - Falling back for node's parametric brother with ignoreTrailingSlash # time=8.167ms
    
    # Subtest: Falling back for node's parametric brother without ignoreTrailingSlash
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 3 - Falling back for node's parametric brother without ignoreTrailingSlash # time=15.064ms
    
    # Subtest: Falling back for node's parametric brother with ignoreTrailingSlash
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 4 - Falling back for node's parametric brother with ignoreTrailingSlash # time=7.737ms
    
    1..4
    # time=94.051ms
ok 24 - test/issue-161.test.js # time=94.051ms

# Subtest: test/issue-17.test.js
    # Subtest: Parametric route, request.url contains dash
        1..1
        ok 1 - should be equal
    ok 1 - Parametric route, request.url contains dash # time=8.685ms
    
    # Subtest: Parametric route with fixed suffix
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 2 - Parametric route with fixed suffix # time=8.099ms
    
    # Subtest: Regex param exceeds max parameter length
        1..1
        ok 1 - expect truthy value
    ok 3 - Regex param exceeds max parameter length # time=1.89ms
    
    # Subtest: Parametric route with regexp and fixed suffix / 1
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
    ok 4 - Parametric route with regexp and fixed suffix / 1 # time=1.541ms
    
    # Subtest: Parametric route with regexp and fixed suffix / 2
        1..1
        ok 1 - should be equal
    ok 5 - Parametric route with regexp and fixed suffix / 2 # time=0.749ms
    
    # Subtest: Parametric route with regexp and fixed suffix / 3
        1..1
        ok 1 - should be equal
    ok 6 - Parametric route with regexp and fixed suffix / 3 # time=0.793ms
    
    # Subtest: Multi parametric route / 1
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - Multi parametric route / 1 # time=1.29ms
    
    # Subtest: Multi parametric route / 2
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - Multi parametric route / 2 # time=1.437ms
    
    # Subtest: Multi parametric route / 3
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - Multi parametric route / 3 # time=1.319ms
    
    # Subtest: Multi parametric route / 4
        1..2
        ok 1 - Everything good
        ok 2 - Everything good
    ok 10 - Multi parametric route / 4 # time=0.921ms
    
    # Subtest: Multi parametric route with regexp / 1
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - Multi parametric route with regexp / 1 # time=1.23ms
    
    # Subtest: Multi parametric route with colon separator
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 12 - Multi parametric route with colon separator # time=2.038ms
    
    # Subtest: Multi parametric route with regexp / 2
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
    ok 13 - Multi parametric route with regexp / 2 # time=3.403ms
    
    # Subtest: Multi parametric route with fixed suffix
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - Multi parametric route with fixed suffix # time=1.588ms
    
    # Subtest: Multi parametric route with regexp and fixed suffix
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 15 - Multi parametric route with regexp and fixed suffix # time=1.486ms
    
    # Subtest: Multi parametric route with wildcard
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 16 - Multi parametric route with wildcard # time=1.348ms
    
    # Subtest: Nested multi parametric route
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 17 - Nested multi parametric route # time=1.625ms
    
    # Subtest: Nested multi parametric route with regexp / 1
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 18 - Nested multi parametric route with regexp / 1 # time=1.64ms
    
    # Subtest: Nested multi parametric route with regexp / 2
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 19 - Nested multi parametric route with regexp / 2 # time=1.551ms
    
    1..19
    # time=113.262ms
ok 25 - test/issue-17.test.js # time=113.262ms

# Subtest: test/issue-175.test.js
    # Subtest: double colon is replaced with single colon, no parameters
        1..1
        ok 1 - should be equivalent
    ok 1 - double colon is replaced with single colon, no parameters # time=15.418ms
    
    # Subtest: exactly one match for static route with colon
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - exactly one match for static route with colon # time=1.758ms
    
    # Subtest: double colon is replaced with single colon, no parameters, same parent node name
        1..1
        ok 1 - should be equivalent
    ok 3 - double colon is replaced with single colon, no parameters, same parent node name # time=1.254ms
    
    # Subtest: double colon is replaced with single colon, default route, same parent node name
        1..1
        ok 1 - expect truthy value
    ok 4 - double colon is replaced with single colon, default route, same parent node name # time=1.045ms
    
    # Subtest: double colon is replaced with single colon, with parameters
        1..1
        ok 1 - should be equivalent
    ok 5 - double colon is replaced with single colon, with parameters # time=2.735ms
    
    1..5
    # time=51.429ms
ok 26 - test/issue-175.test.js # time=51.429ms

# Subtest: test/issue-182.test.js
    # Subtest: Set method property when splitting node
        1..1
        ok 1 - should not match pattern provided
    ok 1 - Set method property when splitting node # time=12.547ms
    
    1..1
    # time=30.844ms
ok 27 - test/issue-182.test.js # time=30.844ms

# Subtest: test/issue-190.test.js
    # Subtest: issue-190
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 1 - issue-190 # time=11.371ms
    
    1..1
    # time=27.375ms
ok 28 - test/issue-190.test.js # time=27.375ms

# Subtest: test/issue-20.test.js
    # Subtest: Standard case
        1..1
        ok 1 - should be equal
    ok 1 - Standard case # time=19.007ms
    
    # Subtest: Should be 404 / 1
        1..1
        ok 1 - Everything good
    ok 2 - Should be 404 / 1 # time=2.99ms
    
    # Subtest: Should be 404 / 2
        1..1
        ok 1 - Everything good
    ok 3 - Should be 404 / 2 # time=0.917ms
    
    # Subtest: Should be 404 / 3
        1..1
        ok 1 - Everything good
    ok 4 - Should be 404 / 3 # time=0.861ms
    
    # Subtest: Should get an empty parameter
        1..1
        ok 1 - should be equal
    ok 5 - Should get an empty parameter # time=0.744ms
    
    1..5
    # time=56.265ms
ok 29 - test/issue-20.test.js # time=56.265ms

# Subtest: test/issue-206.test.js
    # Subtest: Decode the URL before the routing
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - a%20 decode is a
        ok 4 - a%20 decode is a
        ok 5 - a%2520 decode is a%20
        ok 6 - a%252520.html is a%2520
        ok 7 - double space
        ok 8 - invalid encoded path param
    ok 1 - Decode the URL before the routing # time=11.601ms
    
    # Subtest: double encoding
        1..8
        ok 1 - path param
        ok 2 - match handler
        ok 3 - path param
        ok 4 - match handler
        ok 5 - regex param
        ok 6 - match handler
        ok 7 - wildcard param
        ok 8 - match handler
    ok 2 - double encoding # time=9.706ms
    
    # Subtest: Special chars on path parameter
        1..10
        ok 1 - static match
        ok 2 - match handler
        ok 3 - path param
        ok 4 - match handler
        ok 5 - regex param
        ok 6 - match handler
        ok 7 - path param
        ok 8 - match handler
        ok 9 - regex param
        ok 10 - match handler
    ok 3 - Special chars on path parameter # time=3.881ms
    
    # Subtest: Multi parametric route with encoded colon separator
        1..1
        ok 1 - should be equal
    ok 4 - Multi parametric route with encoded colon separator # time=1.115ms
    
    1..4
    # time=51.736ms
ok 30 - test/issue-206.test.js # time=51.736ms

# Subtest: test/issue-221.test.js
    # Subtest: Should return correct param after switching from static route
        1..1
        ok 1 - should be equivalent
    ok 1 - Should return correct param after switching from static route # time=11.925ms
    
    # Subtest: Should return correct param after switching from static route
        1..1
        ok 1 - should be equivalent
    ok 2 - Should return correct param after switching from static route # time=2.148ms
    
    # Subtest: Should return correct param after switching from parametric route
        1..1
        ok 1 - should be equivalent
    ok 3 - Should return correct param after switching from parametric route # time=1.431ms
    
    # Subtest: Should return correct params after switching from parametric route
        1..1
        ok 1 - should be equivalent
    ok 4 - Should return correct params after switching from parametric route # time=2.03ms
    
    1..4
    # time=43.042ms
ok 31 - test/issue-221.test.js # time=43.042ms

# Subtest: test/issue-234.test.js
    # Subtest: Match static url without encoding option
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 1 - Match static url without encoding option # time=17.49ms
    
    # Subtest: Match parametric url with encoding option
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 2 - Match parametric url with encoding option # time=5.517ms
    
    # Subtest: Match encoded parametric url with encoding option
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 3 - Match encoded parametric url with encoding option # time=2.981ms
    
    # Subtest: Decode url components
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 4 - Decode url components # time=3.078ms
    
    # Subtest: Decode url components
        1..5
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
    ok 5 - Decode url components # time=21.518ms
    
    # Subtest: Decode url components
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should be equivalent
        ok 18 - should be equivalent
    ok 6 - Decode url components # time=17.578ms
    
    1..6
    # time=110.572ms
ok 32 - test/issue-234.test.js # time=110.572ms

# Subtest: test/issue-238.test.js
    # Subtest: Multi-parametric tricky path
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 1 - Multi-parametric tricky path # time=15.6ms
    
    # Subtest: Multi-parametric nodes with different static ending 1
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 2 - Multi-parametric nodes with different static ending 1 # time=4.626ms
    
    # Subtest: Multi-parametric nodes with different static ending 2
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 3 - Multi-parametric nodes with different static ending 2 # time=2.224ms
    
    # Subtest: Multi-parametric nodes with different static ending 3
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 4 - Multi-parametric nodes with different static ending 3 # time=2.332ms
    
    # Subtest: Multi-parametric nodes with different static ending 4
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 5 - Multi-parametric nodes with different static ending 4 # time=2.567ms
    
    1..5
    # time=67.369ms
ok 33 - test/issue-238.test.js # time=67.369ms

# Subtest: test/issue-240.test.js
    # Subtest: issue-240: .find matching
        1..14
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - expect falsey value
        ok 14 - expect falsey value
    ok 1 - issue-240: .find matching # time=18.803ms
    
    1..1
    # time=37.513ms
ok 34 - test/issue-240.test.js # time=37.513ms

# Subtest: test/issue-241.test.js
    # Subtest: Double colon and parametric children
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 1 - Double colon and parametric children # time=20.652ms
    
    # Subtest: Double colon and parametric children
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 2 - Double colon and parametric children # time=2.973ms
    
    1..2
    # time=50.522ms
ok 35 - test/issue-241.test.js # time=50.522ms

# Subtest: test/issue-247.test.js
    # Subtest: If there are constraints param, router.off method support filter
        1..12
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
    ok 1 - If there are constraints param, router.off method support filter # time=26.02ms
    
    # Subtest: If there are no constraints param, router.off method remove all matched router
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 2 - If there are no constraints param, router.off method remove all matched router # time=2.883ms
    
    1..2
    # time=58.715ms
ok 36 - test/issue-247.test.js # time=58.715ms

# Subtest: test/issue-254.test.js
    # Subtest: Constraints should not be overrided when multiple router is created
        1..1
        ok 1 - constraints is not overrided
    ok 1 - Constraints should not be overrided when multiple router is created # time=9.885ms
    
    1..1
    # time=29.014ms
ok 37 - test/issue-254.test.js # time=29.014ms

# Subtest: test/issue-28.test.js
    # Subtest: wildcard (more complex test)
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 1 - wildcard (more complex test) # time=21.295ms
    
    # Subtest: Wildcard inside a node with a static route but different method
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - Wildcard inside a node with a static route but different method # time=2.401ms
    
    # Subtest: Wildcard inside a node with a static route but different method (more complex case)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 3 - Wildcard inside a node with a static route but different method (more complex case) # time=1.874ms
    
    # Subtest: Wildcard edge cases
        1..1
        ok 1 - should be equal
    ok 4 - Wildcard edge cases # time=1.227ms
    
    # Subtest: Wildcard edge cases same method
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - Wildcard edge cases same method # time=1.332ms
    
    # Subtest: Wildcard and parametric edge cases
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 6 - Wildcard and parametric edge cases # time=12.077ms
    
    # Subtest: Mixed wildcard and static with same method
        1..1
        ok 1 - should be equal
    ok 7 - Mixed wildcard and static with same method # time=2.041ms
    
    # Subtest: Nested wildcards case - 1
        1..1
        ok 1 - should be equal
    ok 8 - Nested wildcards case - 1 # time=4.102ms
    
    # Subtest: Nested wildcards case - 2
        1..1
        ok 1 - should be equal
    ok 9 - Nested wildcards case - 2 # time=1.656ms
    
    # Subtest: Nested wildcards with parametric and static - 1
        1..1
        ok 1 - should be equal
    ok 10 - Nested wildcards with parametric and static - 1 # time=1.147ms
    
    # Subtest: Nested wildcards with parametric and static - 2
        1..1
        ok 1 - should be equal
    ok 11 - Nested wildcards with parametric and static - 2 # time=1.213ms
    
    # Subtest: Nested wildcards with parametric and static - 3
        1..1
        ok 1 - should be equal
    ok 12 - Nested wildcards with parametric and static - 3 # time=0.966ms
    
    # Subtest: Nested wildcards with parametric and static - 4
        1..1
        ok 1 - should be equal
    ok 13 - Nested wildcards with parametric and static - 4 # time=0.972ms
    
    # Subtest: Nested wildcards with parametric and static - 5
        1..1
        ok 1 - should be equal
    ok 14 - Nested wildcards with parametric and static - 5 # time=1.051ms
    
    # Subtest: Nested wildcards with parametric and static - 6
        1..1
        ok 1 - should be equal
    ok 15 - Nested wildcards with parametric and static - 6 # time=1.039ms
    
    # Subtest: Nested wildcards with parametric and static - 7
        1..1
        ok 1 - should be equal
    ok 16 - Nested wildcards with parametric and static - 7 # time=1.101ms
    
    # Subtest: Nested wildcards with parametric and static - 8
        1..1
        ok 1 - should be equal
    ok 17 - Nested wildcards with parametric and static - 8 # time=1.755ms
    
    # Subtest: Wildcard node with constraints
        1..1
        ok 1 - should be equal
    ok 18 - Wildcard node with constraints # time=2.793ms
    
    # Subtest: Wildcard must be the last character in the route
        1..6
        ok 1 - expected to throw: Error Wildcard must be the last character in the route
        ok 2 - expected to throw: Error Wildcard must be the last character in the route
        ok 3 - expected to throw: Error Wildcard must be the last character in the route
        ok 4 - expected to throw: Error Wildcard must be the last character in the route
        ok 5 - expected to throw: Error Wildcard must be the last character in the route
        ok 6 - expected to throw: Error Wildcard must be the last character in the route
    ok 19 - Wildcard must be the last character in the route # time=8.641ms
    
    1..19
    # time=121.745ms
ok 38 - test/issue-28.test.js # time=121.745ms

# Subtest: test/issue-280.test.js
    # Subtest: Wildcard route match when regexp route fails
        1..1
        ok 1 - should be equivalent
    ok 1 - Wildcard route match when regexp route fails # time=14.801ms
    
    1..1
    # time=29.792ms
ok 39 - test/issue-280.test.js # time=29.792ms

# Subtest: test/issue-285.test.js
    # Subtest: Parametric regex match with similar routes
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 1 - Parametric regex match with similar routes # time=14.044ms
    
    # Subtest: Parametric regex match with similar routes
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 2 - Parametric regex match with similar routes # time=2.428ms
    
    # Subtest: Parametric regex match with similar routes
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 3 - Parametric regex match with similar routes # time=2.856ms
    
    1..3
    # time=45.923ms
ok 40 - test/issue-285.test.js # time=45.923ms

# Subtest: test/issue-44.test.js
    # Subtest: Parametric and static with shared prefix / 1
        1..1
        ok 1 - should be equal
    ok 1 - Parametric and static with shared prefix / 1 # time=9.991ms
    
    # Subtest: Parametric and static with shared prefix / 2
        1..1
        ok 1 - expect truthy value
    ok 2 - Parametric and static with shared prefix / 2 # time=1.522ms
    
    # Subtest: Parametric and static with shared prefix (nested)
        1..1
        ok 1 - expect truthy value
    ok 3 - Parametric and static with shared prefix (nested) # time=1.031ms
    
    # Subtest: Parametric and static with shared prefix and different suffix
        1..1
        ok 1 - expect truthy value
    ok 4 - Parametric and static with shared prefix and different suffix # time=1.447ms
    
    # Subtest: Parametric and static with shared prefix (with wildcard)
        1..1
        ok 1 - should be equal
    ok 5 - Parametric and static with shared prefix (with wildcard) # time=0.943ms
    
    # Subtest: Parametric and static with shared prefix (nested with wildcard)
        1..1
        ok 1 - should be equal
    ok 6 - Parametric and static with shared prefix (nested with wildcard) # time=0.805ms
    
    # Subtest: Parametric and static with shared prefix (nested with split)
        1..1
        ok 1 - should be equal
    ok 7 - Parametric and static with shared prefix (nested with split) # time=1.415ms
    
    1..7
    # time=47.666ms
ok 41 - test/issue-44.test.js # time=47.666ms

# Subtest: test/issue-46.test.js
    # Subtest: If the prefixLen is higher than the pathLen we should not save the wildcard child
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 1 - If the prefixLen is higher than the pathLen we should not save the wildcard child # time=17.255ms
    
    # Subtest: If the prefixLen is higher than the pathLen we should not save the wildcard child (mixed routes)
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 2 - If the prefixLen is higher than the pathLen we should not save the wildcard child (mixed routes) # time=5.872ms
    
    # Subtest: If the prefixLen is higher than the pathLen we should not save the wildcard child (with a root wildcard)
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 3 - If the prefixLen is higher than the pathLen we should not save the wildcard child (with a root wildcard) # time=3.022ms
    
    # Subtest: If the prefixLen is higher than the pathLen we should not save the wildcard child (404)
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 4 - If the prefixLen is higher than the pathLen we should not save the wildcard child (404) # time=1.994ms
    
    1..4
    # time=66.407ms
ok 42 - test/issue-46.test.js # time=66.407ms

# Subtest: test/issue-49.test.js
    # Subtest: Defining static route after parametric - 1
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 1 - Defining static route after parametric - 1 # time=9.052ms
    
    # Subtest: Defining static route after parametric - 2
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - Defining static route after parametric - 2 # time=2.832ms
    
    # Subtest: Defining static route after parametric - 3
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
    ok 3 - Defining static route after parametric - 3 # time=2.371ms
    
    # Subtest: Defining static route after parametric - 4
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
    ok 4 - Defining static route after parametric - 4 # time=1.808ms
    
    # Subtest: Defining static route after parametric - 5
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
    ok 5 - Defining static route after parametric - 5 # time=17.03ms
    
    # Subtest: Should produce the same tree - 1
        1..1
        ok 1 - should be equal
    ok 6 - Should produce the same tree - 1 # time=1.047ms
    
    # Subtest: Should produce the same tree - 2
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 7 - Should produce the same tree - 2 # time=1.286ms
    
    1..7
    # time=68.169ms
ok 43 - test/issue-49.test.js # time=68.169ms

# Subtest: test/issue-59.test.js
    # Subtest: single-character prefix
        1..1
        ok 1 - should be equal
    ok 1 - single-character prefix # time=11.68ms
    
    # Subtest: multi-character prefix
        1..1
        ok 1 - should be equal
    ok 2 - multi-character prefix # time=1.355ms
    
    # Subtest: static / 1
        1..1
        ok 1 - should be equal
    ok 3 - static / 1 # time=0.828ms
    
    # Subtest: static / 2
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - static / 2 # time=0.934ms
    
    # Subtest: static / 3
        1..1
        ok 1 - should be equal
    ok 5 - static / 3 # time=1.019ms
    
    # Subtest: with parameter / 1
        1..1
        ok 1 - should be equal
    ok 6 - with parameter / 1 # time=2.263ms
    
    # Subtest: with parameter / 2
        1..1
        ok 1 - should be equal
    ok 7 - with parameter / 2 # time=0.717ms
    
    # Subtest: with parameter / 3
        1..1
        ok 1 - should be equal
    ok 8 - with parameter / 3 # time=2.566ms
    
    # Subtest: with parameter / 4
        1..1
        ok 1 - should be equal
    ok 9 - with parameter / 4 # time=0.69ms
    
    # Subtest: with parameter / 5
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - with parameter / 5 # time=1.222ms
    
    # Subtest: with parameter / 6
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not be equal
    ok 11 - with parameter / 6 # time=1.661ms
    
    # Subtest: wildcard / 1
        1..1
        ok 1 - should be equal
    ok 12 - wildcard / 1 # time=0.848ms
    
    1..12
    # time=77.137ms
ok 44 - test/issue-59.test.js # time=77.137ms

# Subtest: test/issue-62.test.js
    # Subtest: issue-62
        1..2
        ok 1 - expect falsey value
        ok 2 - expect truthy value
    ok 1 - issue-62 # time=10.682ms
    
    # Subtest: issue-62 - escape chars
        1..2
        ok 1 - expect falsey value
        ok 2 - expect truthy value
    ok 2 - issue-62 - escape chars # time=2.878ms
    
    1..2
    # time=43.261ms
ok 45 - test/issue-62.test.js # time=43.261ms

# Subtest: test/issue-63.test.js
    # Subtest: issue-63
        1..2
        ok 1 - expected to throw
        ok 2 - should be equal
    ok 1 - issue-63 # time=12.726ms
    
    1..1
    # time=27.713ms
ok 46 - test/issue-63.test.js # time=27.713ms

# Subtest: test/issue-67.test.js
    # Subtest: static routes
        1..1
        ok 1 - should be equal
    ok 1 - static routes # time=11.971ms
    
    # Subtest: parametric routes
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 2 - parametric routes # time=3.472ms
    
    # Subtest: parametric with common prefix
        1..1
        ok 1 - should be equivalent
    ok 3 - parametric with common prefix # time=8.349ms
    
    1..3
    # time=55.088ms
ok 47 - test/issue-67.test.js # time=55.088ms

# Subtest: test/issue-93.test.js
    # Subtest: Should keep semver store when split node
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
    ok 1 - Should keep semver store when split node # time=9.909ms
    
    1..1
    # time=33.051ms
ok 48 - test/issue-93.test.js # time=33.051ms

# Subtest: test/lookup-async.test.js
    # Subtest: should return result in the done callback
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should return result in the done callback # time=8.445ms
    
    # Subtest: should return an error in the done callback
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - should return an error in the done callback # time=2.466ms
    
    1..2
    # time=31.103ms
ok 49 - test/lookup-async.test.js # time=31.103ms

# Subtest: test/lookup.test.js
    # Subtest: lookup calls route handler with no context
        1..1
        ok 1 - should be equal
    ok 1 - lookup calls route handler with no context # time=8.201ms
    
    # Subtest: lookup calls route handler with context as scope
        1..1
        ok 1 - should be equal
    ok 2 - lookup calls route handler with context as scope # time=1.396ms
    
    # Subtest: lookup calls default route handler with no context
        1..1
        ok 1 - should be equal
    ok 3 - lookup calls default route handler with no context # time=0.682ms
    
    # Subtest: lookup calls default route handler with context as scope
        1..1
        ok 1 - should be equal
    ok 4 - lookup calls default route handler with context as scope # time=0.982ms
    
    1..4
    # time=43.766ms
ok 50 - test/lookup.test.js # time=43.766ms

# Subtest: test/matching-order.test.js
    # Subtest: Matching order
        1..3
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
    ok 1 - Matching order # time=23.043ms
    
    1..1
    # time=40.437ms
ok 51 - test/matching-order.test.js # time=40.437ms

# Subtest: test/max-param-length.test.js
    # Subtest: maxParamLength default value is 500
        1..1
        ok 1 - should be equal
    ok 1 - maxParamLength default value is 500 # time=4.777ms
    
    # Subtest: maxParamLength should set the maximum length for a parametric route
        1..1
        ok 1 - should be equivalent
    ok 2 - maxParamLength should set the maximum length for a parametric route # time=5.848ms
    
    # Subtest: maxParamLength should set the maximum length for a parametric (regex) route
        1..1
        ok 1 - should be equivalent
    ok 3 - maxParamLength should set the maximum length for a parametric (regex) route # time=1.763ms
    
    # Subtest: maxParamLength should set the maximum length for a parametric (multi) route
        1..1
        ok 1 - should be equivalent
    ok 4 - maxParamLength should set the maximum length for a parametric (multi) route # time=1.093ms
    
    # Subtest: maxParamLength should set the maximum length for a parametric (regex with suffix) route
        1..1
        ok 1 - should be equivalent
    ok 5 - maxParamLength should set the maximum length for a parametric (regex with suffix) route # time=1.081ms
    
    1..5
    # time=61.731ms
ok 52 - test/max-param-length.test.js # time=61.731ms

# Subtest: test/methods.test.js
    # Subtest: the router is an object with methods
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 1 - the router is an object with methods # time=5.423ms
    
    # Subtest: on throws for invalid method
        1..1
        ok 1 - expected to throw
    ok 2 - on throws for invalid method # time=1.313ms
    
    # Subtest: on throws for invalid path
        1..3
        ok 1 - expected to throw
        ok 2 - expected to throw
        ok 3 - expected to throw
    ok 3 - on throws for invalid path # time=0.867ms
    
    # Subtest: register a route
        1..1
        ok 1 - expect truthy value
    ok 4 - register a route # time=3.359ms
    
    # Subtest: register a route with multiple methods
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 5 - register a route with multiple methods # time=1.244ms
    
    # Subtest: does not register /test/*/ when ignoreTrailingSlash is true
        1..1
        ok 1 - should be equal
    ok 6 - does not register /test/*/ when ignoreTrailingSlash is true # time=0.821ms
    
    # Subtest: off throws for invalid method
        1..1
        ok 1 - expected to throw
    ok 7 - off throws for invalid method # time=0.703ms
    
    # Subtest: off throws for invalid path
        1..3
        ok 1 - expected to throw
        ok 2 - expected to throw
        ok 3 - expected to throw
    ok 8 - off throws for invalid path # time=0.703ms
    
    # Subtest: off with nested wildcards with parametric and static
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 9 - off with nested wildcards with parametric and static # time=4.164ms
    
    # Subtest: off removes all routes when ignoreTrailingSlash is true
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 10 - off removes all routes when ignoreTrailingSlash is true # time=1.339ms
    
    # Subtest: off removes all routes when ignoreDuplicateSlashes is true
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - off removes all routes when ignoreDuplicateSlashes is true # time=1.505ms
    
    # Subtest: deregister a route without children
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 12 - deregister a route without children # time=0.972ms
    
    # Subtest: deregister a route with children
        1..2
        ok 1 - expect falsey value
        ok 2 - expect truthy value
    ok 13 - deregister a route with children # time=1.157ms
    
    # Subtest: deregister a route by method
        1..2
        ok 1 - expect falsey value
        ok 2 - expect truthy value
    ok 14 - deregister a route by method # time=0.869ms
    
    # Subtest: deregister a route with multiple methods
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 15 - deregister a route with multiple methods # time=0.72ms
    
    # Subtest: reset a router
        1..2
        ok 1 - expect falsey value
        ok 2 - expect falsey value
    ok 16 - reset a router # time=0.733ms
    
    # Subtest: default route
        1..1
        ok 1 - expect truthy value
    ok 17 - default route # time=0.482ms
    
    # Subtest: parametric route
        1..1
        ok 1 - should be equal
    ok 18 - parametric route # time=0.853ms
    
    # Subtest: multiple parametric route
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 19 - multiple parametric route # time=1.211ms
    
    # Subtest: multiple parametric route with the same prefix
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 20 - multiple parametric route with the same prefix # time=2.673ms
    
    # Subtest: nested parametric route
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 21 - nested parametric route # time=1.039ms
    
    # Subtest: nested parametric route with same prefix
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
    ok 22 - nested parametric route with same prefix # time=3.553ms
    
    # Subtest: long route
        1..1
        ok 1 - expect truthy value
    ok 23 - long route # time=0.76ms
    
    # Subtest: long parametric route
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
    ok 24 - long parametric route # time=1.443ms
    
    # Subtest: long parametric route with common prefix
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
    ok 25 - long parametric route with common prefix # time=2.621ms
    
    # Subtest: common prefix
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
    ok 26 - common prefix # time=1.121ms
    
    # Subtest: wildcard
        1..1
        ok 1 - should be equal
    ok 27 - wildcard # time=0.64ms
    
    # Subtest: catch all wildcard
        1..1
        ok 1 - should be equal
    ok 28 - catch all wildcard # time=0.645ms
    
    # Subtest: find should return the route
        1..1
        ok 1 - should be equivalent
    ok 29 - find should return the route # time=27.43ms
    
    # Subtest: find should return the route with params
        1..1
        ok 1 - should be equivalent
    ok 30 - find should return the route with params # time=9.55ms
    
    # Subtest: find should return a null handler if the route does not exist
        1..1
        ok 1 - should be equivalent
    ok 31 - find should return a null handler if the route does not exist # time=0.766ms
    
    # Subtest: should decode the uri - parametric
        1..1
        ok 1 - should be equivalent
    ok 32 - should decode the uri - parametric # time=1.716ms
    
    # Subtest: should decode the uri - wildcard
        1..1
        ok 1 - should be equivalent
    ok 33 - should decode the uri - wildcard # time=1.328ms
    
    # Subtest: safe decodeURIComponent
        1..1
        ok 1 - should be equivalent
    ok 34 - safe decodeURIComponent # time=0.82ms
    
    # Subtest: safe decodeURIComponent - nested route
        1..1
        ok 1 - should be equivalent
    ok 35 - safe decodeURIComponent - nested route # time=1.071ms
    
    # Subtest: safe decodeURIComponent - wildcard
        1..1
        ok 1 - should be equivalent
    ok 36 - safe decodeURIComponent - wildcard # time=1.051ms
    
    # Subtest: static routes should be inserted before parametric / 1
        1..1
        ok 1 - inside correct handler
    ok 37 - static routes should be inserted before parametric / 1 # time=1.213ms
    
    # Subtest: static routes should be inserted before parametric / 2
        1..1
        ok 1 - inside correct handler
    ok 38 - static routes should be inserted before parametric / 2 # time=0.856ms
    
    # Subtest: static routes should be inserted before parametric / 3
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 39 - static routes should be inserted before parametric / 3 # time=0.94ms
    
    # Subtest: static routes should be inserted before parametric / 4
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 40 - static routes should be inserted before parametric / 4 # time=0.91ms
    
    # Subtest: Static parametric with shared part of the path
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 41 - Static parametric with shared part of the path # time=2.198ms
    
    # Subtest: parametric route with different method
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 42 - parametric route with different method # time=1.272ms
    
    # Subtest: params does not keep the object reference
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 43 - params does not keep the object reference # time=35.904ms
    
    # Subtest: Unsupported method (static)
        1..1
        ok 1 - Everything ok
    ok 44 - Unsupported method (static) # time=1.012ms
    
    # Subtest: Unsupported method (wildcard)
        1..1
        ok 1 - Everything ok
    ok 45 - Unsupported method (wildcard) # time=3.27ms
    
    # Subtest: Unsupported method (static find)
        1..1
        ok 1 - should be equivalent
    ok 46 - Unsupported method (static find) # time=0.832ms
    
    # Subtest: Unsupported method (wildcard find)
        1..1
        ok 1 - should be equivalent
    ok 47 - Unsupported method (wildcard find) # time=0.622ms
    
    # Subtest: register all known HTTP methods
        1..6
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
        ok 5 - expect truthy value
        ok 6 - should be equal
    ok 48 - register all known HTTP methods # time=12.157ms
    
    # Subtest: off removes all routes without checking constraints if no constraints are specified
        1..1
        ok 1 - should be equal
    ok 49 - off removes all routes without checking constraints if no constraints are specified # time=4.077ms
    
    # Subtest: off removes only constrainted routes if constraints are specified
        1..2
        ok 1 - should be equal
        ok 2 - expect falsey value
    ok 50 - off removes only constrainted routes if constraints are specified # time=4.909ms
    
    # Subtest: off removes no routes if provided constraints does not match any registered route
        1..1
        ok 1 - should be equal
    ok 51 - off removes no routes if provided constraints does not match any registered route # time=14.3ms
    
    # Subtest: off validates that constraints is an object or undefined
        1..6
        ok 1 - expected to throw
        ok 2 - expected to throw
        ok 3 - expected to throw
        ok 4 - expected to not throw
        ok 5 - expected to not throw
        ok 6 - expected to not throw
    ok 52 - off validates that constraints is an object or undefined # time=1.272ms
    
    # Subtest: off removes only unconstrainted route if an empty object is given as constraints
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 53 - off removes only unconstrainted route if an empty object is given as constraints # time=0.793ms
    
    1..53
    # time=309.243ms
ok 53 - test/methods.test.js # time=309.243ms

# Subtest: test/on-bad-url.test.js
    # Subtest: If onBadUrl is defined, then a bad url should be handled differently (find)
        1..1
        ok 1 - should not be equal
    ok 1 - If onBadUrl is defined, then a bad url should be handled differently (find) # time=14.003ms
    
    # Subtest: If onBadUrl is defined, then a bad url should be handled differently (lookup)
        1..1
        ok 1 - should be equal
    ok 2 - If onBadUrl is defined, then a bad url should be handled differently (lookup) # time=1.789ms
    
    # Subtest: If onBadUrl is not defined, then we should call the defaultRoute (find)
        1..1
        ok 1 - should be equal
    ok 3 - If onBadUrl is not defined, then we should call the defaultRoute (find) # time=0.868ms
    
    # Subtest: If onBadUrl is not defined, then we should call the defaultRoute (lookup)
        1..1
        ok 1 - Everything fine
    ok 4 - If onBadUrl is not defined, then we should call the defaultRoute (lookup) # time=0.819ms
    
    1..4
    # time=53.079ms
ok 54 - test/on-bad-url.test.js # time=53.079ms

# Subtest: test/optional-params.test.js
    # Subtest: Test route with optional parameter
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - Test route with optional parameter # time=16.249ms
    
    # Subtest: Test for duplicate route with optional param
        1..1
        ok 1 - should be equal
    ok 2 - Test for duplicate route with optional param # time=2.628ms
    
    # Subtest: Test for param with ? not at the end
        1..1
        ok 1 - should be equal
    ok 3 - Test for param with ? not at the end # time=0.873ms
    
    # Subtest: Multi parametric route with optional param
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - Multi parametric route with optional param # time=2.244ms
    
    # Subtest: Optional Parameter with ignoreTrailingSlash = true
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - Optional Parameter with ignoreTrailingSlash = true # time=3.221ms
    
    # Subtest: Optional Parameter with ignoreTrailingSlash = false
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should match pattern provided
    ok 6 - Optional Parameter with ignoreTrailingSlash = false # time=12.19ms
    
    # Subtest: Optional Parameter with ignoreDuplicateSlashes = true
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - Optional Parameter with ignoreDuplicateSlashes = true # time=4.285ms
    
    # Subtest: Optional Parameter with ignoreDuplicateSlashes = false
        1..4
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
    ok 8 - Optional Parameter with ignoreDuplicateSlashes = false # time=2.591ms
    
    # Subtest: deregister a route with optional param
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
    ok 9 - deregister a route with optional param # time=6.642ms
    
    1..9
    # time=112.76ms
ok 55 - test/optional-params.test.js # time=112.76ms

# Subtest: test/params-collisions.test.js
    # Subtest: should setup parametric and regexp node
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - should setup parametric and regexp node # time=21.502ms
    
    # Subtest: should setup parametric and multi-parametric node
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - should setup parametric and multi-parametric node # time=14.32ms
    
    # Subtest: should throw when set upping two parametric nodes
        1..1
        ok 1 - expected to throw
    ok 3 - should throw when set upping two parametric nodes # time=1.535ms
    
    # Subtest: should throw when set upping two regexp nodes
        1..1
        ok 1 - expected to throw
    ok 4 - should throw when set upping two regexp nodes # time=2.178ms
    
    # Subtest: should set up two parametric nodes with static ending
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - should set up two parametric nodes with static ending # time=1.553ms
    
    # Subtest: should set up two regexp nodes with static ending
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - should set up two regexp nodes with static ending # time=1.506ms
    
    # Subtest: node with longer static suffix should have higher priority
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - node with longer static suffix should have higher priority # time=1.569ms
    
    # Subtest: node with longer static suffix should have higher priority
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 8 - node with longer static suffix should have higher priority # time=5.847ms
    
    # Subtest: should set up regexp node and node with static ending
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - should set up regexp node and node with static ending # time=4.465ms
    
    1..9
    # time=110.863ms
ok 56 - test/params-collisions.test.js # time=110.863ms

# Subtest: test/path-params-match.test.js
    # Subtest: path params match
        1..24
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equivalent
        ok 19 - should be equal
        ok 20 - should be equivalent
        ok 21 - should be equal
        ok 22 - should be equivalent
        ok 23 - should be equal
        ok 24 - should be equivalent
    ok 1 - path params match # time=23.252ms
    
    1..1
    # time=40.783ms
ok 57 - test/path-params-match.test.js # time=40.783ms

# Subtest: test/pretty-print.test.js
    # Subtest: pretty print - static routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - pretty print - static routes # time=9.683ms
    
    # Subtest: pretty print - parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - pretty print - parametric routes # time=2.665ms
    
    # Subtest: pretty print - mixed parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - pretty print - mixed parametric routes # time=1.455ms
    
    # Subtest: pretty print - wildcard routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - pretty print - wildcard routes # time=2.56ms
    
    # Subtest: pretty print - parametric routes with same parent and followed by a static route which has the same prefix with the former routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - pretty print - parametric routes with same parent and followed by a static route which has the same prefix with the former routes # time=1.535ms
    
    # Subtest: pretty print - constrained parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - pretty print - constrained parametric routes # time=3.298ms
    
    # Subtest: pretty print - multiple parameters are drawn appropriately
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - pretty print - multiple parameters are drawn appropriately # time=2.666ms
    
    # Subtest: pretty print commonPrefix - use routes array to draw flattened routes
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - pretty print commonPrefix - use routes array to draw flattened routes # time=20.1ms
    
    # Subtest: pretty print commonPrefix - handle wildcard root
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - pretty print commonPrefix - handle wildcard root # time=1.574ms
    
    # Subtest: pretty print commonPrefix - handle constrained routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - pretty print commonPrefix - handle constrained routes # time=2.229ms
    
    # Subtest: pretty print includeMeta - commonPrefix: true
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - pretty print includeMeta - commonPrefix: true # time=5.609ms
    
    # Subtest: pretty print includeMeta - commonPrefix: false
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - pretty print includeMeta - commonPrefix: false # time=3.714ms
    
    # Subtest: pretty print includeMeta - buildPrettyMeta function
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 13 - pretty print includeMeta - buildPrettyMeta function # time=2.197ms
    
    1..13
    # time=106.938ms
ok 58 - test/pretty-print.test.js # time=106.938ms

# Subtest: test/querystring.test.js
    # Subtest: should sanitize the url - query
        1..2
        ok 1 - should be equivalent
        ok 2 - expect truthy value
    ok 1 - should sanitize the url - query # time=13.828ms
    
    # Subtest: should sanitize the url - hash
        1..2
        ok 1 - should be equivalent
        ok 2 - expect truthy value
    ok 2 - should sanitize the url - hash # time=2.651ms
    
    # Subtest: handles path and query separated by ;
        1..2
        ok 1 - should be equivalent
        ok 2 - expect truthy value
    ok 3 - handles path and query separated by ; # time=3.595ms
    
    1..3
    # time=40.901ms
ok 59 - test/querystring.test.js # time=40.901ms

# Subtest: test/regex.test.js
    # Subtest: route with matching regex
        1..1
        ok 1 - expect truthy value
    ok 1 - route with matching regex # time=8.181ms
    
    # Subtest: route without matching regex
        1..1
        ok 1 - expect truthy value
    ok 2 - route without matching regex # time=1.747ms
    
    # Subtest: route with an extension regex 2
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 3 - route with an extension regex 2 # time=2.52ms
    
    # Subtest: nested route with matching regex
        1..1
        ok 1 - expect truthy value
    ok 4 - nested route with matching regex # time=1.185ms
    
    # Subtest: mixed nested route with matching regex
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - mixed nested route with matching regex # time=1.753ms
    
    # Subtest: mixed nested route with double matching regex
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - mixed nested route with double matching regex # time=1.043ms
    
    # Subtest: mixed nested route without double matching regex
        1..1
        ok 1 - expect truthy value
    ok 7 - mixed nested route without double matching regex # time=0.82ms
    
    # Subtest: route with an extension regex
        1..1
        ok 1 - expect truthy value
    ok 8 - route with an extension regex # time=0.731ms
    
    # Subtest: route with an extension regex - no match
        1..1
        ok 1 - expect truthy value
    ok 9 - route with an extension regex - no match # time=0.825ms
    
    # Subtest: safe decodeURIComponent
        1..1
        ok 1 - should be equivalent
    ok 10 - safe decodeURIComponent # time=2.707ms
    
    # Subtest: Should check if a regex is safe to use
        1..13
        ok 1 - ok
        ok 2 - ok
        ok 3 - ok
        ok 4 - ok
        ok 5 - ok
        ok 6 - ok
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - expect truthy value
    ok 11 - Should check if a regex is safe to use # time=21.304ms
    
    # Subtest: Disable safe regex check
        1..13
        ok 1 - ok
        ok 2 - ok
        ok 3 - ok
        ok 4 - ok
        ok 5 - ok
        ok 6 - ok
        ok 7 - ok
        ok 8 - ok
        ok 9 - ok
        ok 10 - ok
        ok 11 - ok
        ok 12 - ok
        ok 13 - ok
    ok 12 - Disable safe regex check # time=4.169ms
    
    1..12
    # time=88.444ms
ok 60 - test/regex.test.js # time=88.444ms

# Subtest: test/routes-registered.test.js
    # Subtest: verify routes registered
        1..6
        ok 1 - should be equal
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 1 - verify routes registered # time=15.318ms
    
    # Subtest: verify routes registered and deregister
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - verify routes registered and deregister # time=2.01ms
    
    1..2
    # time=41.189ms
ok 61 - test/routes-registered.test.js # time=41.189ms

# Subtest: test/server.test.js
    # Subtest: basic router with http server
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 1 - basic router with http server # time=50.219ms
    
    # Subtest: router with params with http server
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - router with params with http server # time=5.988ms
    
    # Subtest: default route
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 3 - default route # time=2.364ms
    
    # Subtest: automatic default route
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 4 - automatic default route # time=1.984ms
    
    # Subtest: maps two routes when trailing slash should be trimmed
        1..21
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - expect truthy value
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should be equivalent
        ok 20 - should be equal
        ok 21 - should be equivalent
    ok 5 - maps two routes when trailing slash should be trimmed # time=8.255ms
    
    # Subtest: does not trim trailing slash when ignoreTrailingSlash is false
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should be equal
    ok 6 - does not trim trailing slash when ignoreTrailingSlash is false # time=3.588ms
    
    # Subtest: does not map // when ignoreTrailingSlash is true
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 7 - does not map // when ignoreTrailingSlash is true # time=3.338ms
    
    # Subtest: maps two routes when duplicate slashes should be trimmed
        1..21
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should be equal
        ok 14 - should be equivalent
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - expect truthy value
        ok 18 - expect truthy value
        ok 19 - expect truthy value
        ok 20 - should be equal
        ok 21 - should be equivalent
    ok 8 - maps two routes when duplicate slashes should be trimmed # time=6.911ms
    
    # Subtest: does not trim duplicate slashes when ignoreDuplicateSlashes is false
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should be equal
    ok 9 - does not trim duplicate slashes when ignoreDuplicateSlashes is false # time=3.159ms
    
    # Subtest: does map // when ignoreDuplicateSlashes is true
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - does map // when ignoreDuplicateSlashes is true # time=3.441ms
    
    # Subtest: versioned routes
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 11 - versioned routes # time=3.449ms
    
    1..11
    # time=98.47ms
ok 62 - test/server.test.js # time=98.47ms

# Subtest: test/shorthands.test.js
    # Subtest: should support shorthand
        1..34
        # Subtest: `.acl`
            1..1
            ok 1 - expect truthy value
        ok 1 - `.acl` # time=5.283ms
        
        # Subtest: `.bind`
            1..1
            ok 1 - expect truthy value
        ok 2 - `.bind` # time=1.096ms
        
        # Subtest: `.checkout`
            1..1
            ok 1 - expect truthy value
        ok 3 - `.checkout` # time=0.663ms
        
        # Subtest: `.connect`
            1..1
            ok 1 - expect truthy value
        ok 4 - `.connect` # time=1.545ms
        
        # Subtest: `.copy`
            1..1
            ok 1 - expect truthy value
        ok 5 - `.copy` # time=0.554ms
        
        # Subtest: `.delete`
            1..1
            ok 1 - expect truthy value
        ok 6 - `.delete` # time=0.51ms
        
        # Subtest: `.get`
            1..1
            ok 1 - expect truthy value
        ok 7 - `.get` # time=0.498ms
        
        # Subtest: `.head`
            1..1
            ok 1 - expect truthy value
        ok 8 - `.head` # time=0.474ms
        
        # Subtest: `.link`
            1..1
            ok 1 - expect truthy value
        ok 9 - `.link` # time=0.462ms
        
        # Subtest: `.lock`
            1..1
            ok 1 - expect truthy value
        ok 10 - `.lock` # time=0.463ms
        
        # Subtest: `.m-search`
            1..1
            ok 1 - expect truthy value
        ok 11 - `.m-search` # time=0.463ms
        
        # Subtest: `.merge`
            1..1
            ok 1 - expect truthy value
        ok 12 - `.merge` # time=0.457ms
        
        # Subtest: `.mkactivity`
            1..1
            ok 1 - expect truthy value
        ok 13 - `.mkactivity` # time=0.458ms
        
        # Subtest: `.mkcalendar`
            1..1
            ok 1 - expect truthy value
        ok 14 - `.mkcalendar` # time=0.453ms
        
        # Subtest: `.mkcol`
            1..1
            ok 1 - expect truthy value
        ok 15 - `.mkcol` # time=0.447ms
        
        # Subtest: `.move`
            1..1
            ok 1 - expect truthy value
        ok 16 - `.move` # time=0.435ms
        
        # Subtest: `.notify`
            1..1
            ok 1 - expect truthy value
        ok 17 - `.notify` # time=0.43ms
        
        # Subtest: `.options`
            1..1
            ok 1 - expect truthy value
        ok 18 - `.options` # time=0.578ms
        
        # Subtest: `.patch`
            1..1
            ok 1 - expect truthy value
        ok 19 - `.patch` # time=0.455ms
        
        # Subtest: `.post`
            1..1
            ok 1 - expect truthy value
        ok 20 - `.post` # time=0.436ms
        
        # Subtest: `.propfind`
            1..1
            ok 1 - expect truthy value
        ok 21 - `.propfind` # time=0.429ms
        
        # Subtest: `.proppatch`
            1..1
            ok 1 - expect truthy value
        ok 22 - `.proppatch` # time=0.411ms
        
        # Subtest: `.purge`
            1..1
            ok 1 - expect truthy value
        ok 23 - `.purge` # time=0.449ms
        
        # Subtest: `.put`
            1..1
            ok 1 - expect truthy value
        ok 24 - `.put` # time=0.376ms
        
        # Subtest: `.rebind`
            1..1
            ok 1 - expect truthy value
        ok 25 - `.rebind` # time=0.468ms
        
        # Subtest: `.report`
            1..1
            ok 1 - expect truthy value
        ok 26 - `.report` # time=0.362ms
        
        # Subtest: `.search`
            1..1
            ok 1 - expect truthy value
        ok 27 - `.search` # time=0.371ms
        
        # Subtest: `.source`
            1..1
            ok 1 - expect truthy value
        ok 28 - `.source` # time=0.362ms
        
        # Subtest: `.subscribe`
            1..1
            ok 1 - expect truthy value
        ok 29 - `.subscribe` # time=0.355ms
        
        # Subtest: `.trace`
            1..1
            ok 1 - expect truthy value
        ok 30 - `.trace` # time=0.629ms
        
        # Subtest: `.unbind`
            1..1
            ok 1 - expect truthy value
        ok 31 - `.unbind` # time=0.401ms
        
        # Subtest: `.unlink`
            1..1
            ok 1 - expect truthy value
        ok 32 - `.unlink` # time=0.625ms
        
        # Subtest: `.unlock`
            1..1
            ok 1 - expect truthy value
        ok 33 - `.unlock` # time=0.382ms
        
        # Subtest: `.unsubscribe`
            1..1
            ok 1 - expect truthy value
        ok 34 - `.unsubscribe` # time=0.368ms
        
    ok 1 - should support shorthand # time=96.51ms
    
    # Subtest: should support `.all` shorthand
        1..11
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
    ok 2 - should support `.all` shorthand # time=3.434ms
    
    1..2
    # time=108.733ms
ok 63 - test/shorthands.test.js # time=108.733ms

# Subtest: test/store.test.js
    # Subtest: handler should have the store object
        1..1
        ok 1 - should be equal
    ok 1 - handler should have the store object # time=6.627ms
    
    # Subtest: find a store object
        1..1
        ok 1 - should be equivalent
    ok 2 - find a store object # time=4.27ms
    
    # Subtest: update the store
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - update the store # time=0.854ms
    
    1..3
    # time=26.687ms
ok 64 - test/store.test.js # time=26.687ms

1..64
# time=7747.259ms
